---
AWSTemplateFormatVersion: "2010-09-09"

Description: efd s3 buckets

Parameters:
  Environment:
    Description: An environment name that will be appended to resource names
    Type: String

Resources:
  IcsLogs:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: LogDeliveryWrite
      BucketName: !Sub "${AWS::StackName}-ics-logs"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID:
                Fn::ImportValue: !Sub "efd-${Environment}-kms-s3-alias"
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: Abort Multipart Uploads
            Prefix: ""
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-ics-logs"

  Rendition:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: Private
      BucketName: !Sub "${AWS::StackName}-rendition"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID:
                Fn::ImportValue: !Sub "efd-${Environment}-kms-Rendition-s3-alias"
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName: !Ref IcsLogs
        LogFilePrefix: !Sub "${AWS::StackName}-rendition"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: Abort Multipart Uploads
            Prefix: ""
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-rendition"

  Logs:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: Private
      BucketName: !Sub "${AWS::StackName}-logs"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID:
                Fn::ImportValue: !Sub "efd-${Environment}-kms-s3-alias"
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: Abort Multipart Uploads
            Prefix: ""
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-logs"

  Util:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: Private
      BucketName: !Sub "${AWS::StackName}-util"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID:
                Fn::ImportValue: !Sub "efd-${Environment}-kms-s3-alias"
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName: !Ref IcsLogs
        LogFilePrefix: !Sub "${AWS::StackName}-util"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: Abort Multipart Uploads
            Prefix: ""
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-util"

  Configuration:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: Private
      BucketName: !Sub "${AWS::StackName}-configuration"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID:
                Fn::ImportValue: !Sub "efd-${Environment}-kms-s3-alias"
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName: !Ref IcsLogs
        LogFilePrefix: !Sub "${AWS::StackName}-configuration"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: Abort Multipart Uploads
            Prefix: ""
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-configuration"

  MongoDb:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: Private
      BucketName: !Sub "${AWS::StackName}-mongo"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID:
                Fn::ImportValue: !Sub "efd-${Environment}-kms-s3-alias"
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName: !Ref IcsLogs
        LogFilePrefix: !Sub "${AWS::StackName}-mongo"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: Abort Multipart Uploads
            Prefix: ""
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-mongo"

  Test:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: Private
      BucketName: !Sub "${AWS::StackName}-test"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID:
                Fn::ImportValue: !Sub "efd-${Environment}-kms-s3-alias"
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName: !Ref IcsLogs
        LogFilePrefix: !Sub "${AWS::StackName}-test"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: Abort Multipart Uploads
            Prefix: ""
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-test"

  MimixInputOutput:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: Private
      BucketName: !Sub "${AWS::StackName}-mimix-input-output"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              # TODO Each bucket should have its own kms key
              # Should also reference the alias
              KMSMasterKeyID:
                Fn::ImportValue: !Sub "efd-${Environment}-kms-MimixInput-s3-alias"
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName: !Ref IcsLogs
        LogFilePrefix: !Sub "${AWS::StackName}-mimix-input-output"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: Abort Multipart Uploads
            Prefix: ""
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
  nlblogbucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      # wb-mars-efd-stg-log-s3-bucket
      BucketName: !Sub "wb-mars-efd-${Environment}-log-s3-bucket"
      AccessControl: "Private"
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - Id: "Abort Incomplete Multipart Uploads"
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 30
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-${AWS::Region}-nbcu"
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-mimix-input-output"